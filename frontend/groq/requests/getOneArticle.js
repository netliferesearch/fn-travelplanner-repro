import groq from 'groq';
import { clientGROQ } from '../client';

// Get one Article by language, slug and type
export const getOneArticle = async ({ lang, slug, fallback }) => {
  const query = groq`*[
    _type == "Article"
    && (locSlug[$lang].current == $slug || locSlug[$fallback].current == $slug)
    && !(_id in path('drafts.**'))
  ][0]{
    _id,
    _type,
    _updatedAt,
    title,
    locTitle,
    metadata,
    slug,
    locSlug,
    season,
    coverImage{locDescription, image{width, height, public_id, context}},
    articleCategory->{_id, locTitle, locSlug},
    locShortDescription,
    region->{_id, title},
    regionSubscriber[]->{_id},
    steps[]{
      title,
      tripDistance,
      tripDuration,
      tripTravelTime,
      locDescription,
      cloudinaryImages,
      videoUrl{no, en, de},
      relevantProducts[]->{
        _id,
        title,
        locTitle,
        cloudinaryImages,
        place->{
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          geopoint,
          region->{
            _id,
          },
        },
      },
      locHighlightedProducts{
        no[]->{
          _id,
          _type,
          title,
          locTitle,
          category->{_id, title, locTitle},
          subCategory->{_id, title, locTitle},
          cloudinaryImages,
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
            region->{ _id, title },
          },
        },
        en[]->{
          _id,
          _type,
          title,
          locTitle,
          category->{_id, title, locTitle},
          subCategory->{_id, title, locTitle},
          cloudinaryImages,
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
            region->{ _id, title },
          },
        },
        de[]->{
          _id,
          _type,
          title,
          locTitle,
          category->{_id, title, locTitle},
          subCategory->{_id, title, locTitle},
          cloudinaryImages,
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
            region->{ _id, title },
          },
        }
      },
      Places[]->{
        _id,
        title,
        geopoint
      },
    },
    bookingUrl,
    cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
    content[]{
      _key,
      title,
      locTitle,
      snapSeaGalleryId,
      url,
      "__typename": _type,
      "deRaw": de,
      "enRaw": en,
      "noRaw": no,
      cloudinaryImages[]{mainImage, image{height, public_id, width, context, url}, locDescription},
      status,
      campaign->{
        _id,
        isActive,
        locTitle,
        locSlug,
        locShortDescription,
        campaignRegion->{
          region->{_id},
          locTitle,
          locSlug,
          locShortDescription,
          campaignRegionColor{hex},
          campaignRegionLogo{_type, asset{title, altText, description, url}},
          coverImage{locDescription, image{context, type, format, url, secure_url, width, height}},
        },
        campaignColor->{color{hex}},
        coverImage{locDescription, image{context, type, format, url, secure_url, width, height}},
      },
      locDescription,
      "products": relevantProducts[]->{
        "__typename": _type,
        _id,
        title,
        locTitle,
        slug,
        locSlug,
        cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
        place->{
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          geopoint,
          region->{
            _id,
          },
        },
      },
      locHighlightedProducts{
        no[]->{
          "__typename": _type,
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
          },
        },
        en[]->{
          "__typename": _type,
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
          },
        },
        de[]->{
          "__typename": _type,
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
          },
        }
      },
      "product": relevantProducts->{
        "__typename": _type,
        _id,
        title,
        locTitle,
        slug,
        locSlug,
        cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
        place->{
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          geopoint,
          region->{
            _id,
          },
        },
      },
      locHighlightedOneProduct{
        no->{
          "__typename": _type,
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
          },
        },
        en->{
          "__typename": _type,
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
          },
        },
        de->{
          "__typename": _type,
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          cloudinaryImages[]{mainImage, image{height, public_id, width, url}},
          place->{
            _id,
            title,
            locTitle,
            slug,
            locSlug,
            geopoint,
          },
        }
      },
      locCampaigns{
        "__typename": _type,
        no[]{
          _type,
          campaign->{
            _id,
            isActive,
            locTitle,
            locSlug,
            locShortDescription,
            campaignColor->{color{hex}},
            coverImage,
            campaignRegion->{
              region->{_id},
              locTitle,
              locSlug,
              locShortDescription,
              campaignRegionLogo,
              campaignRegionColor,
              coverImage,
            }
          },
          readMoreText{
            no,
            en,
            de,
          },
          status,
        },
        en[]{
          _type,
          campaign->{
            _id,
            isActive,
            locTitle,
            locSlug,
            locShortDescription,
            campaignColor->{color{hex}},
            coverImage,
            campaignRegion->{
              region->{_id},
              locTitle,
              locSlug,
              locShortDescription,
              campaignRegionLogo,
              campaignRegionColor,
              coverImage,
            }
          },
          readMoreText{
            no,
            en,
            de,
          },
          status,
        },
        de[]{
          _type,
          campaign->{
            _id,
            isActive,
            locTitle,
            locSlug,
            locShortDescription,
            campaignColor->{color{hex}},
            coverImage,
            campaignRegion->{
              region->{_id},
              locTitle,
              locSlug,
              locShortDescription,
              campaignRegionLogo,
              campaignRegionColor,
              coverImage,
            }
          },
          readMoreText{
            no,
            en,
            de,
          },
          status,
        },
      },
    },
    relatedArticles{
      locTitle,
      locShortDescription,
      articles[]->{
        _id,
        title,
        locTitle,
        slug,
        locSlug,
        locShortDescription,
        cloudinaryImages[]{
          altText,
          locDescription,
          mainImage,
          image{
            height,
            public_id,
            width,
            url,
          },
        },
        images{
          altText,
          mainImage,
          imageRef{cloudinaryId},
        },
        coverImage{
          image{public_id},
          locDescription,
        },
      },
      locArticles{
        no[]->{
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          locShortDescription,
          cloudinaryImages[]{
            altText,
            locDescription,
            mainImage,
            image{
              height,
              public_id,
              width,
              url,
            },
          },
          images{
            altText,
            mainImage,
            imageRef{cloudinaryId},
          },
          coverImage{
            image{public_id},
            locDescription,
          },
        },
        en[]->{
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          locShortDescription,
          cloudinaryImages[]{
            altText,
            locDescription,
            mainImage,
            image{
              height,
              public_id,
              width,
              url,
            },
          },
          images{
            altText,
            mainImage,
            imageRef{cloudinaryId},
          },
          coverImage{
            image{public_id},
            locDescription,
          },
        },
        de[]->{
          _id,
          title,
          locTitle,
          slug,
          locSlug,
          locShortDescription,
          cloudinaryImages[]{
            altText,
            locDescription,
            mainImage,
            image{
              height,
              public_id,
              width,
              url,
            },
          },
          images{
            altText,
            mainImage,
            imageRef{cloudinaryId},
          },
          coverImage{
            image{public_id},
            locDescription,
          },
        },
      },
    },
    tripSuggestion,
  }`;
  return clientGROQ.fetch(query, { lang, slug, fallback: fallback || lang });
};
